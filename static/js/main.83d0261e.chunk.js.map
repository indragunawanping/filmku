{"version":3,"sources":["Components/SearchBar.module.css","Components/MovieListPage.module.css","Assets/logo-20-IMDb.webp","Containers/ErrorModalContainer.module.css","Components/HomePage.module.css","Assets/logo-512-filmku.png","Assets/poster-not-available.webp","Components/MovieDetailPage.module.css","state.ts","Components/SearchBar.tsx","actionsHttp.ts","config.ts","actions.ts","responseUtil.ts","actionsMovie.ts","Containers/SearchBarContainer.tsx","Components/HomePage.tsx","Containers/HomePageContainer.tsx","Components/MovieListPage.tsx","Containers/MoveListPageContainer.tsx","Components/MovieDetailPage.tsx","Containers/MovieDetailPageContainer.tsx","Containers/ErrorModalContainer.tsx","Components/App.tsx","serviceWorker.js","initialStates.ts","reducers.ts","index.tsx"],"names":["module","exports","HttpCallMethod","HttpCallStatus","SearchBar","props","className","styles","SearchBarContainer","src","logo","alt","Logo","onClick","handleLogoClick","Input","fluid","InputSearch","type","placeholder","action","onChange","handleSearchInputChange","onKeyDown","handleEnterKeyDown","value","query","icon","handleButtonSearchClick","name","updateHttpCallStatus","callId","newStatus","payload","status","addNewHttpCall","httpCall","sendHttpRequest","nextAction","errorAction","doHttpCall","then","response","ok","onSuccessful","catch","onFailed","configuration","method","credentials","undefined","headers","Object","assign","fetch","url","processResponse","failedAction","REACT_APP_APPLICATION_BASE_URL","process","REACT_APP_API_KEY","API_KEY","updateErrorModalStatus","errorModal","extractRatings","unformattedRatings","formattedRatings","rating","push","source","Source","Value","updateFetchingMovieListStatus","isFetchingMovieList","updateFetchingMovieDetailStatus","isFetchingMovieDetail","fetchMovieList","page","successfulRedirection","dispatch","REACT_APP_APPLICATION_MOVIE_LIST_URL","concat","newCallId","uuid","id","GET","errorModalStatus","isOpen","title","body","json","data","Response","SUCCESSFUL","totalResults","unformattedMovieList","formattedMovieList","movie","imdbId","imdbID","Title","year","Year","Type","poster","Poster","extractMovieList","Search","content","Error","ERROR","message","error","httpCallSent","SENT","fetchMovieDetail","REACT_APP_APPLICATION_MOVIE_DETAIL_URL","unformattedMovieDetail","rated","Rated","released","Released","runtime","Runtime","genre","Genre","director","Director","writer","Writer","actors","Actors","plot","Plot","language","Language","country","Country","awards","Awards","ratings","Ratings","metascore","Metascore","imdbRating","imdbVotes","dvd","DVD","boxOffice","BoxOffice","production","Production","website","Website","useDispatch","history","useHistory","useState","setQuery","yearRange","key","text","String","event","currentTarget","HomePage","HomePageContentContainer","HomePageContainer","MovieListPage","totalPage","currentPage","MovieListPageContainer","Loader","active","inline","searchQuery","Grid","Row","MovieListContainer","renderMovieList","currentMovieList","MovieContentContainer","PosterContainer","posterNotAvailable","movieType","customColor","customStyle","backgroundColor","MovieType","style","renderMovieLabel","MovieTitle","MovieYear","DetailButton","handleDetailButtonClick","PaginationGroup","handlePageChange","min","handlePageNumberInputChange","handlePageNumberEnterKeyDown","desiredPageNumber","InputPage","Warning","visibility","isWarningVisible","connect","state","control","currentTotalResults","session","urlParams","match","params","pageNumber","Math","floor","setDesiredPageNumber","setIsWarningVisible","setCurrentPage","useEffect","successfulChangePageRedirection","activePage","parseInt","MovieDetailPage","MovieDetailContainer","MovieDetailContentContainerColumn","MovieDetailContentContainerRow","currentMovieDetail","MovieDetailContent","TitleLine","PlotContainer","DetailLine","Detail","DetailContent","ratingsElements","renderRatings","MiniImage","logoIMDb","ButtonBack","handleButtonBackClick","goBack","handleCloseErrorModal","Modal","open","onClose","size","ErrorModal","Header","Content","Actions","negative","App","exact","path","component","MovieDetailPageContainer","Boolean","window","location","hostname","initialCommunicationState","httpCalls","initialControlState","initialSessionState","reducers","combineReducers","communication","httpCallIndex","findIndex","x","newHttpCall","slice","logger","createLogger","level","collapsed","diff","middleware","composeWithDevTools","composeEnhancers","applyMiddleware","thunkMiddleware","store","createStore","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.83d0261e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBarContainer\":\"SearchBar_SearchBarContainer__1XgqJ\",\"Logo\":\"SearchBar_Logo__1GqyI\",\"InputSearch\":\"SearchBar_InputSearch__HPh0n\",\"SelectYear\":\"SearchBar_SelectYear__1FQ8t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieListPageContainer\":\"MovieListPage_MovieListPageContainer__1hykW\",\"Loader\":\"MovieListPage_Loader__Pp4Cm\",\"Title\":\"MovieListPage_Title__1Kd0Y\",\"MovieListContainer\":\"MovieListPage_MovieListContainer__3yzXR\",\"MovieContentContainer\":\"MovieListPage_MovieContentContainer__tmHaP\",\"PosterContainer\":\"MovieListPage_PosterContainer__1mkPI\",\"Poster\":\"MovieListPage_Poster__2kzHu\",\"MovieType\":\"MovieListPage_MovieType__1WgZF\",\"MovieTitle\":\"MovieListPage_MovieTitle__2AEKe\",\"MovieYear\":\"MovieListPage_MovieYear__1qtTg\",\"DetailButton\":\"MovieListPage_DetailButton__30di8\",\"PaginationGroup\":\"MovieListPage_PaginationGroup__3mCsy\",\"InputSearch\":\"MovieListPage_InputSearch__224QX\",\"InputPage\":\"MovieListPage_InputPage__2dSb7\",\"Warning\":\"MovieListPage_Warning__2ex2t\"};","module.exports = __webpack_public_path__ + \"static/media/logo-20-IMDb.2da34bd4.webp\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorModal\":\"ErrorModalContainer_ErrorModal__JYJwd\",\"Header\":\"ErrorModalContainer_Header__2Kc1C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HomePageContentContainer\":\"HomePage_HomePageContentContainer__RL7eE\"};","module.exports = __webpack_public_path__ + \"static/media/logo-512-filmku.db0f53dc.png\";","module.exports = __webpack_public_path__ + \"static/media/poster-not-available.d3938149.webp\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"MovieDetailPage_Loader__8Rdc0\",\"TitleLine\":\"MovieDetailPage_TitleLine__3EMbl\",\"Title\":\"MovieDetailPage_Title__13QxT\",\"MovieType\":\"MovieDetailPage_MovieType__324WD\",\"MovieDetailContentContainerColumn\":\"MovieDetailPage_MovieDetailContentContainerColumn__hkG9t\",\"MovieDetailContentContainerRow\":\"MovieDetailPage_MovieDetailContentContainerRow__1b-Hd\",\"MovieDetailContainer\":\"MovieDetailPage_MovieDetailContainer__pGJcb\",\"Poster\":\"MovieDetailPage_Poster__1LIn_\",\"MovieDetailContent\":\"MovieDetailPage_MovieDetailContent__1YC8w\",\"PlotContainer\":\"MovieDetailPage_PlotContainer__1Bd4a\",\"Plot\":\"MovieDetailPage_Plot__TpiHp\",\"DetailLine\":\"MovieDetailPage_DetailLine__BjjvR\",\"Detail\":\"MovieDetailPage_Detail__judhb\",\"DetailContent\":\"MovieDetailPage_DetailContent__3mblx\",\"Ratings\":\"MovieDetailPage_Ratings__3LuXr\",\"Source\":\"MovieDetailPage_Source__KoPs0\",\"MiniImage\":\"MovieDetailPage_MiniImage__2toRD\",\"ButtonBack\":\"MovieDetailPage_ButtonBack__8G1Eg\"};","export interface State {\r\n  communication: CommunicationState;\r\n  control: ControlState;\r\n  session: SessionState;\r\n}\r\n\r\nexport interface CommunicationState {\r\n  httpCalls: HttpCall[];\r\n}\r\n\r\nexport interface ControlState {\r\n  currentTotalResults: number;\r\n  currentMovieList: Movie[];\r\n  currentMovieDetail: MovieDetail;\r\n  errorModal: ErrorModalProps;\r\n}\r\n\r\nexport interface SessionState {\r\n  isFetchingMovieList: boolean;\r\n  isFetchingMovieDetail: boolean;\r\n}\r\n\r\nexport interface HttpCall {\r\n  id: string;\r\n  method: HttpCallMethod;\r\n  url: string;\r\n  headers?: HttpHeader;\r\n  credentials?: RequestCredentials;\r\n  mode?: RequestMode;\r\n  requestBody?: string | any;\r\n  status?: HttpCallStatus;\r\n}\r\n\r\nexport enum HttpCallMethod {\r\n  GET = \"GET\",\r\n}\r\n\r\nexport interface HttpHeader {\r\n  [key: string]: string;\r\n}\r\n\r\nexport enum HttpCallStatus {\r\n  SENT = \"SENT\",\r\n  SUCCESSFUL = \"SUCCESSFUL\",\r\n  ERROR = \"ERROR\"\r\n}\r\n\r\nexport interface ErrorModalProps {\r\n  isOpen: boolean;\r\n  title?: string;\r\n  content?: string | JSX.Element;\r\n}\r\n\r\nexport interface Movie {\r\n  imdbId: string,\r\n  title: string,\r\n  year: string,\r\n  type: string,\r\n  poster: string,\r\n}\r\n\r\nexport interface MovieDetail {\r\n  title: string,\r\n  year: string,\r\n  rated: string,\r\n  released:string,\r\n  runtime: string,\r\n  genre: string,\r\n  director: string,\r\n  writer: string,\r\n  actors: string,\r\n  plot: string,\r\n  language: string,\r\n  country: string,\r\n  awards: string,\r\n  poster: string,\r\n  ratings: Rating[],\r\n  metascore: string,\r\n  imdbRating: string,\r\n  imdbVotes: string,\r\n  imdbId: string,\r\n  type: string,\r\n  dvd: string,\r\n  boxOffice: string,\r\n  production: string,\r\n  website: string,\r\n}\r\n\r\nexport interface Rating {\r\n  source: string,\r\n  value: string\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { FormEvent } from 'react';\r\nimport logo from \"../Assets/logo-512-filmku.png\";\r\nimport { Input } from \"semantic-ui-react\";\r\nimport Button from \"semantic-ui-react/dist/commonjs/elements/Button\";\r\nimport Icon from \"semantic-ui-react/dist/commonjs/elements/Icon\";\r\nimport styles from './SearchBar.module.css';\r\n\r\ninterface SearchBarProps {\r\n  query: string;\r\n  yearRange: any[];\r\n  handleLogoClick: () => void;\r\n  handleSearchInputChange: (event: FormEvent<HTMLInputElement>) => void;\r\n  handleEnterKeyDown: any;\r\n  handleButtonSearchClick: () => void;\r\n}\r\n\r\nconst SearchBar: React.FC<SearchBarProps> = (props: SearchBarProps) => {\r\n\r\n  return (\r\n    <div className={styles.SearchBarContainer}>\r\n      <img src={logo} alt=\"logo-filmku\" className={styles.Logo} onClick={props.handleLogoClick}/>\r\n      <Input fluid className={styles.InputSearch} type='text' placeholder='Search movie...' action>\r\n        <input onChange={props.handleSearchInputChange} onKeyDown={props.handleEnterKeyDown} value={props.query}/>\r\n        <Button type='submit' icon onClick={props.handleButtonSearchClick}><Icon name='search'/></Button>\r\n      </Input>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default SearchBar;\r\n","import { HttpCall, HttpCallStatus } from \"./state\";\r\n\r\nexport const ADD_NEW_HTTP_CALL = \"ADD_NEW_HTTP_CALL\";\r\nexport const UPDATE_HTTP_CALL_STATUS = \"UPDATE_HTTP_CALL_STATUS\";\r\n\r\nexport const updateHttpCallStatus = (callId: number | string, newStatus: HttpCallStatus) => {\r\n  return {\r\n    type: UPDATE_HTTP_CALL_STATUS, payload: {\r\n      callId: callId,\r\n      status: newStatus\r\n    }\r\n  };\r\n};\r\n\r\nexport const addNewHttpCall = (httpCall: HttpCall) => {\r\n  return {\r\n    type: ADD_NEW_HTTP_CALL, payload: httpCall\r\n  };\r\n};\r\n\r\nexport const sendHttpRequest = (httpCall: HttpCall,\r\n                                nextAction: (response: Response) => void,\r\n                                errorAction?: (response: Response) => void) => {\r\n  doHttpCall(httpCall)\r\n    .then((response: Response) => {\r\n      if (!response.ok && errorAction) {\r\n        throw(response);\r\n      }\r\n      return response;\r\n    })\r\n    .then(onSuccessful(nextAction))\r\n    .catch(onFailed(errorAction));\r\n};\r\n\r\nconst doHttpCall = (httpCall: HttpCall): Promise<Response> => {\r\n  let configuration = {\r\n    method: httpCall.method,\r\n    credentials: httpCall.credentials ? httpCall.credentials : undefined\r\n  };\r\n  if (httpCall.headers) {\r\n    configuration = Object.assign({}, configuration, {\r\n      headers: httpCall.headers\r\n    });\r\n  }\r\n  return fetch(httpCall.url, configuration);\r\n};\r\n\r\nconst onSuccessful = (processResponse: (response: Response) => void) => {\r\n  return (response: Response) => {\r\n    processResponse(response);\r\n  };\r\n};\r\n\r\nconst onFailed = (failedAction?: (errorResponse: Response) => void) => {\r\n  return (response: Response) => {\r\n    if (failedAction) {\r\n      failedAction(response);\r\n    } else {\r\n      throw(response);\r\n    }\r\n  };\r\n};\r\n","export const REACT_APP_APPLICATION_BASE_URL = process.env.REACT_APP_APPLICATION_BASE_URL;\r\nexport const REACT_APP_API_KEY = process.env.API_KEY;\r\n","import { ErrorModalProps } from \"./state\";\r\n\r\nexport const UPDATE_ERROR_MODAL = \"UPDATE_ERROR_MODAL\";\r\n\r\nexport const updateErrorModalStatus = (errorModal: ErrorModalProps) => {\r\n  return { type: UPDATE_ERROR_MODAL, payload: errorModal };\r\n};\r\n","import { Movie, Rating } from \"./state\";\r\n\r\nexport const extractMovieList = (unformattedMovieList: any) => {\r\n  let formattedMovieList: Movie[] = [];\r\n\r\n  for (const movie of unformattedMovieList) {\r\n    formattedMovieList.push({\r\n        imdbId: movie.imdbID,\r\n        title: movie.Title,\r\n        year: movie.Year,\r\n        type: movie.Type,\r\n        poster: movie.Poster\r\n      }\r\n    )\r\n  }\r\n\r\n  return formattedMovieList;\r\n};\r\n\r\nexport const extractRatings = (unformattedRatings: any) => {\r\n  let formattedRatings: Rating[] = [];\r\n\r\n  for(const rating of unformattedRatings) {\r\n    formattedRatings.push(\r\n      {\r\n        source: rating.Source,\r\n        value: rating.Value\r\n      }\r\n    )\r\n  }\r\n\r\n  return formattedRatings;\r\n};\r\n\r\nexport const formatMovieDetail = (unformattedMovieDetail: any) => {\r\n  return {\r\n    title: unformattedMovieDetail.Title,\r\n    year: unformattedMovieDetail.Year,\r\n    rated: unformattedMovieDetail.Rated,\r\n    released:unformattedMovieDetail.Released,\r\n    runtime: unformattedMovieDetail.Runtime,\r\n    genre: unformattedMovieDetail.Genre,\r\n    director: unformattedMovieDetail.Director,\r\n    writer: unformattedMovieDetail.Writer,\r\n    actors: unformattedMovieDetail.Actors,\r\n    plot: unformattedMovieDetail.Plot,\r\n    language: unformattedMovieDetail.Language,\r\n    country: unformattedMovieDetail.Country,\r\n    awards: unformattedMovieDetail.Awards,\r\n    poster: unformattedMovieDetail.Poster,\r\n    ratings: extractRatings(unformattedMovieDetail.Ratings),\r\n    metascore: unformattedMovieDetail.Metascore,\r\n    imdbRating: unformattedMovieDetail.imdbRating,\r\n    imdbVotes: unformattedMovieDetail.imdbVotes,\r\n    imdbId: unformattedMovieDetail.imdbID,\r\n    type: unformattedMovieDetail.Type,\r\n    dvd: unformattedMovieDetail.DVD,\r\n    boxOffice: unformattedMovieDetail.BoxOffice,\r\n    production: unformattedMovieDetail.Production,\r\n    website: unformattedMovieDetail.Website,\r\n  };\r\n};\r\n\r\n","import { ThunkDispatch } from \"redux-thunk\";\r\nimport { AnyAction } from \"redux\";\r\nimport { ErrorModalProps, HttpCall, HttpCallMethod, HttpCallStatus, Movie, MovieDetail } from \"./state\";\r\nimport { addNewHttpCall, sendHttpRequest, updateHttpCallStatus } from \"./actionsHttp\";\r\nimport { REACT_APP_API_KEY, REACT_APP_APPLICATION_BASE_URL } from \"./config\";\r\nimport * as uuid from \"uuid\";\r\nimport { updateErrorModalStatus } from \"./actions\";\r\nimport { extractMovieList, formatMovieDetail } from './responseUtil';\r\n\r\nexport const UPDATE_CURRENT_TOTAL_RESULTS = \"UPDATE_CURRENT_TOTAL_RESULTS\";\r\nexport const UPDATE_CURRENT_MOVIE_LIST = \"UPDATE_CURRENT_MOVIE_LIST\";\r\nexport const UPDATE_CURRENT_MOVIE_DETAIL = \"UPDATE_CURRENT_MOVIE_DETAIL\";\r\n\r\nexport const UPDATE_FETCHING_MOVIE_LIST_STATUS = \"UPDATE_FETCHING_MOVIE_LIST_STATUS\";\r\nexport const UPDATE_FETCHING_MOVIE_DETAIL_STATUS = \"UPDATE_FETCHING_MOVIE_DETAIL_STATUS\";\r\n\r\nconst updateFetchingMovieListStatus = (isFetchingMovieList: boolean) => {\r\n  return {\r\n    type: UPDATE_FETCHING_MOVIE_LIST_STATUS, payload: isFetchingMovieList\r\n  }\r\n};\r\n\r\nconst updateFetchingMovieDetailStatus = (isFetchingMovieDetail: boolean) => {\r\n  return {\r\n    type: UPDATE_FETCHING_MOVIE_DETAIL_STATUS, payload: isFetchingMovieDetail\r\n  }\r\n};\r\n\r\nconst updateCurrentTotalResults = (totalResults: number) => {\r\n  return {\r\n    type: UPDATE_CURRENT_TOTAL_RESULTS, payload: totalResults\r\n  }\r\n};\r\n\r\nconst updateCurrentMovieList = (searchResults: Movie[]) => {\r\n  return {\r\n    type: UPDATE_CURRENT_MOVIE_LIST, payload: searchResults\r\n  }\r\n};\r\n\r\nconst updateCurrentMovieDetail = (movieDetail: MovieDetail) => {\r\n  return {\r\n    type: UPDATE_CURRENT_MOVIE_DETAIL, payload: movieDetail\r\n  }\r\n};\r\n\r\nexport const fetchMovieList = (query: string, page: string, successfulRedirection?: () => void) => {\r\n  return (dispatch: ThunkDispatch<{}, {}, AnyAction>) => {\r\n    const REACT_APP_APPLICATION_MOVIE_LIST_URL = \"?apikey=\".concat(REACT_APP_API_KEY? REACT_APP_API_KEY : '').concat(\"&s=\").concat(query).concat(\"&page=\").concat(page);\r\n    const url = REACT_APP_APPLICATION_BASE_URL + REACT_APP_APPLICATION_MOVIE_LIST_URL;\r\n    const newCallId = uuid.v4();\r\n    const httpCall: HttpCall = {\r\n      id: newCallId,\r\n      method: HttpCallMethod.GET,\r\n      url: url,\r\n    };\r\n\r\n    let errorModalStatus: ErrorModalProps = {\r\n      isOpen: true,\r\n      title: \"Unable to retrieve Movie List.\"\r\n    };\r\n\r\n    const successfulAction = (response: Response) => {\r\n      if (response.body) {\r\n        response.json()\r\n          .then((data) => {\r\n            if (data.Response === 'True') {\r\n              dispatch(updateHttpCallStatus(newCallId, HttpCallStatus.SUCCESSFUL));\r\n              dispatch(updateCurrentTotalResults(data.totalResults));\r\n              dispatch(updateCurrentMovieList(extractMovieList(data.Search)));\r\n              dispatch(updateFetchingMovieListStatus(false));\r\n              if (successfulRedirection) successfulRedirection();\r\n            } else {\r\n              errorModalStatus.content = data.Error;\r\n              dispatch(updateFetchingMovieListStatus(false));\r\n              dispatch(updateErrorModalStatus(errorModalStatus));\r\n            }\r\n          });\r\n      }\r\n    };\r\n\r\n    const failedAction = (response: Response) => {\r\n      dispatch(updateHttpCallStatus(newCallId, HttpCallStatus.ERROR));\r\n      if (response.body) {\r\n        response.json()\r\n          .then((data) => {\r\n            errorModalStatus.content = data.message;\r\n            dispatch(updateFetchingMovieListStatus(false));\r\n            dispatch(updateErrorModalStatus(errorModalStatus));\r\n            return;\r\n          })\r\n          .catch((error: Error) => {\r\n            errorModalStatus.content = error.message;\r\n            dispatch(updateFetchingMovieListStatus(false));\r\n            dispatch(updateErrorModalStatus(errorModalStatus));\r\n            return;\r\n          });\r\n      } else {\r\n        errorModalStatus.content = \"Unable to retrieve Movie List. Please contact developer.\";\r\n      }\r\n      dispatch(updateFetchingMovieListStatus(false));\r\n      if (errorModalStatus.content) {\r\n        dispatch(updateErrorModalStatus(errorModalStatus));\r\n      }\r\n    };\r\n    dispatch(updateFetchingMovieListStatus(true));\r\n    sendHttpRequest(httpCall, successfulAction, failedAction);\r\n    const httpCallSent = Object.assign({}, httpCall, {\r\n      status: HttpCallStatus.SENT\r\n    });\r\n    dispatch(addNewHttpCall(httpCallSent));\r\n  };\r\n};\r\n\r\nexport const fetchMovieDetail = (imdbId: string, successfulRedirection?: () => void) => {\r\n  return (dispatch: ThunkDispatch<{}, {}, AnyAction>) => {\r\n    const REACT_APP_APPLICATION_MOVIE_DETAIL_URL = \"?i=\".concat(imdbId).concat(\"&plot=full\").concat(\"&apikey=\").concat(REACT_APP_API_KEY? REACT_APP_API_KEY : '');\r\n    const url = REACT_APP_APPLICATION_BASE_URL + REACT_APP_APPLICATION_MOVIE_DETAIL_URL;\r\n    const newCallId = uuid.v4();\r\n    const httpCall: HttpCall = {\r\n      id: newCallId,\r\n      method: HttpCallMethod.GET,\r\n      url: url,\r\n    };\r\n\r\n    let errorModalStatus: ErrorModalProps = {\r\n      isOpen: true,\r\n      title: \"Unable to retrieve Movie Detail.\"\r\n    };\r\n\r\n    const successfulAction = (response: Response) => {\r\n      if (response.body) {\r\n        response.json()\r\n          .then((data) => {\r\n            dispatch(updateHttpCallStatus(newCallId, HttpCallStatus.SUCCESSFUL));\r\n            dispatch(updateCurrentMovieDetail(formatMovieDetail(data)));\r\n            dispatch(updateFetchingMovieDetailStatus(false));\r\n            if (successfulRedirection) successfulRedirection();\r\n          });\r\n      }\r\n    };\r\n\r\n    const failedAction = (response: Response) => {\r\n      dispatch(updateHttpCallStatus(newCallId, HttpCallStatus.ERROR));\r\n      if (response.body) {\r\n        response.json()\r\n          .then((data) => {\r\n            errorModalStatus.content = data.message;\r\n            dispatch(updateFetchingMovieDetailStatus(false));\r\n            dispatch(updateErrorModalStatus(errorModalStatus));\r\n            return;\r\n          })\r\n          .catch((error: Error) => {\r\n            errorModalStatus.content = error.message;\r\n            dispatch(updateFetchingMovieDetailStatus(false));\r\n            dispatch(updateErrorModalStatus(errorModalStatus));\r\n            return;\r\n          });\r\n      } else {\r\n        errorModalStatus.content = \"Unable to retrieve Movie Detail. Please contact developer.\";\r\n      }\r\n      dispatch(updateFetchingMovieDetailStatus(false));\r\n      if (errorModalStatus.content) {\r\n        dispatch(updateErrorModalStatus(errorModalStatus));\r\n      }\r\n    };\r\n    dispatch(updateFetchingMovieDetailStatus(true));\r\n    sendHttpRequest(httpCall, successfulAction, failedAction);\r\n    const httpCallSent = Object.assign({}, httpCall, {\r\n      status: HttpCallStatus.SENT\r\n    });\r\n    dispatch(addNewHttpCall(httpCallSent));\r\n  };\r\n};\r\n","import React, { FormEvent, useState } from 'react';\r\nimport SearchBar from \"../Components/SearchBar\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { fetchMovieList } from \"../actionsMovie\";\r\n\r\nconst SearchBarContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  let yearRange: any[] = [];\r\n\r\n  for (let year = 1895; year <= 2020; year++) {\r\n    yearRange.push(\r\n      {\r\n        key: year,\r\n        text: year,\r\n        value: year\r\n      }\r\n    )\r\n  }\r\n\r\n  const handleLogoClick = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  const successfulRedirection = () => {\r\n    history.push('/movie-list/'.concat(query).concat('/').concat(String(1)));\r\n  };\r\n\r\n  const handleSearchInputChange = (event: FormEvent<HTMLInputElement>) => {\r\n    setQuery(event.currentTarget.value);\r\n  };\r\n\r\n  const handleEnterKeyDown = (event: any) => {\r\n    if (event.key === 'Enter') {\r\n      dispatch(fetchMovieList(query, String(1), successfulRedirection));\r\n    }\r\n  };\r\n\r\n  const handleButtonSearchClick = () => {\r\n    dispatch(fetchMovieList(query, String(1), successfulRedirection));\r\n  };\r\n\r\n  return (\r\n    <SearchBar query={query}\r\n               yearRange={yearRange}\r\n               handleLogoClick={handleLogoClick}\r\n               handleSearchInputChange={handleSearchInputChange}\r\n               handleEnterKeyDown={handleEnterKeyDown}\r\n               handleButtonSearchClick={handleButtonSearchClick}\r\n    />\r\n  )\r\n};\r\n\r\nexport default SearchBarContainer;\r\n","import React from 'react';\r\nimport styles from './HomePage.module.css';\r\nimport SearchBarContainer from \"../Containers/SearchBarContainer\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div className={styles.HomePageContentContainer}>\r\n      <SearchBarContainer/>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport HomePage from \"../Components/HomePage\";\r\n\r\nconst HomePageContainer = () => {\r\n  return (\r\n    <HomePage/>\r\n  )\r\n};\r\n\r\nexport default HomePageContainer;\r\n","import React, { FormEvent } from 'react';\r\nimport styles from './MovieListPage.module.css';\r\nimport { Movie } from \"../state\";\r\nimport posterNotAvailable from '../Assets/poster-not-available.webp';\r\nimport { Grid, Input, Loader } from \"semantic-ui-react\";\r\nimport SearchBarContainer from \"../Containers/SearchBarContainer\";\r\nimport Button from \"semantic-ui-react/dist/commonjs/elements/Button\";\r\n\r\ninterface MovieListPageProps {\r\n  query: string;\r\n  searchQuery: string;\r\n  currentMovieList: Movie[];\r\n  currentPage: number;\r\n  totalPage: number;\r\n  isFetchingMovieList: boolean;\r\n  desiredPageNumber: number;\r\n  isWarningVisible: boolean;\r\n  handleSearchInputChange: (event: FormEvent<HTMLInputElement>) => void;\r\n  handleEnterKeyDown: any;\r\n  handleDetailButtonClick: (imdbId: string) => void;\r\n  handlePageChange: (pageNumber:  number) => void;\r\n  handlePageNumberInputChange: (event: FormEvent<HTMLInputElement>) => void;\r\n  handlePageNumberEnterKeyDown: any;\r\n}\r\n\r\nconst MovieListPage: React.FC<MovieListPageProps> = (props: MovieListPageProps) => {\r\n  const totalPage = props.totalPage;\r\n  const currentPage = props.currentPage;\r\n\r\n  const renderMovieLabel = (movieType: string) => {\r\n    let customColor: string;\r\n\r\n    switch (movieType) {\r\n      case \"movie\":\r\n        customColor = '#E52D3F';\r\n        break;\r\n      case \"series\":\r\n        customColor = '#F2C32B';\r\n        break;\r\n      default:\r\n        customColor = '#481EE2';\r\n    }\r\n\r\n    let customStyle = {\r\n      backgroundColor: customColor\r\n    };\r\n\r\n    return <span className={styles.MovieType} style={{ ...customStyle }}>{movieType}</span>\r\n  };\r\n\r\n  const renderMovieList = () => {\r\n    let renderMovieList: JSX.Element[] = [];\r\n\r\n    for (const movie of props.currentMovieList) {\r\n      renderMovieList.push(\r\n        <div className={styles.MovieContentContainer} key={movie.imdbId}>\r\n          <div className={styles.PosterContainer}>\r\n            {\r\n              movie.poster === \"N/A\" ?\r\n                <img className={styles.Poster} src={posterNotAvailable} alt=''/> :\r\n                <img className={styles.Poster} src={movie.poster} alt=''/>\r\n            }\r\n          </div>\r\n          {\r\n            renderMovieLabel(movie.type)\r\n          }\r\n          <p className={styles.MovieTitle}>{movie.title}</p>\r\n          <span className={styles.MovieYear}>{movie.year}</span>\r\n          <button className={styles.DetailButton} onClick={() => props.handleDetailButtonClick(movie.imdbId)}>Detail\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return renderMovieList;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.MovieListPageContainer}>\r\n      <SearchBarContainer/>\r\n      {\r\n        props.isFetchingMovieList ?\r\n          <div className={styles.Loader}>\r\n            <Loader active inline='centered'>Loading</Loader>\r\n          </div>\r\n          :\r\n          <>\r\n            <span className={styles.Title}>\r\n              Movie list for: \"{props.searchQuery}\"\r\n            </span>\r\n            <Grid>\r\n              <Grid.Row className={styles.MovieListContainer}>\r\n                {renderMovieList()}\r\n              </Grid.Row>\r\n            </Grid>\r\n            <span>Page {currentPage} of {totalPage}</span>\r\n            <div className={styles.PaginationGroup}>\r\n              <Button icon='angle double left' onClick={() => props.handlePageChange(1)}/>\r\n              <Button icon='angle left' onClick={() => props.handlePageChange(currentPage-1)}/>\r\n              <Input className={styles.InputSearch} type='text'>\r\n                <input type=\"number\"\r\n                       min=\"1\"\r\n                       onChange={props.handlePageNumberInputChange}\r\n                       onKeyDown={props.handlePageNumberEnterKeyDown}\r\n                       value={props.desiredPageNumber}\r\n                       className={styles.InputPage}\r\n                />\r\n              </Input>\r\n              <Button icon='angle right' onClick={() => props.handlePageChange(currentPage+1)}/>\r\n              <Button icon='angle double right' onClick={() => props.handlePageChange(totalPage)}/>\r\n            </div>\r\n            <span className={styles.Warning} style={{ visibility: props.isWarningVisible ? \"visible\" : \"hidden\" }}>Please input page number in range only.</span>\r\n          </>\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default MovieListPage;\r\n","import React, { FormEvent, useEffect, useState } from 'react';\r\nimport MovieListPage from \"../Components/MovieListPage\";\r\nimport { Movie, State } from \"../state\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { RouteComponentProps, useHistory } from \"react-router\";\r\nimport { fetchMovieDetail, fetchMovieList } from \"../actionsMovie\";\r\n\r\nexport interface MovieListPageContainerProps extends RouteComponentProps<any> {\r\n  currentMovieList: Movie[];\r\n  currentTotalResults: number;\r\n  isFetchingMovieList: boolean;\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    currentMovieList: state.control.currentMovieList,\r\n    currentTotalResults: state.control.currentTotalResults,\r\n    isFetchingMovieList: state.session.isFetchingMovieList\r\n  }\r\n};\r\n\r\nconst MovieListPageContainer: React.FC<MovieListPageContainerProps> = (props: MovieListPageContainerProps) => {\r\n  const currentMovieList = props.currentMovieList;\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const urlParams = props.match.params;\r\n  const searchQuery = urlParams.searchQuery;\r\n  const pageNumber = urlParams.pageNumber;\r\n\r\n  const isFetchingMovieList = props.isFetchingMovieList;\r\n  const totalPage = Math.floor(props.currentTotalResults / 10);\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n  const [desiredPageNumber, setDesiredPageNumber] = useState(1);\r\n  const [isWarningVisible, setIsWarningVisible] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMovieList(searchQuery, pageNumber));\r\n    setCurrentPage(currentPage);\r\n    setDesiredPageNumber(currentPage);\r\n    setIsWarningVisible(false);\r\n  }, [dispatch, searchQuery, pageNumber, currentPage]);\r\n\r\n  const successfulRedirection = () => {\r\n    history.push('/movie-list/'.concat(query).concat('/').concat(String(currentPage)));\r\n  };\r\n\r\n  const successfulChangePageRedirection = (activePage: number) => {\r\n    history.push('/movie-list/'.concat(searchQuery).concat('/').concat(String(activePage)));\r\n    setCurrentPage(activePage);\r\n    setDesiredPageNumber(activePage);\r\n  };\r\n\r\n  const handleSearchInputChange = (event: FormEvent<HTMLInputElement>) => {\r\n    setQuery(event.currentTarget.value);\r\n  };\r\n\r\n  const handleEnterKeyDownProps = (event: any) => {\r\n    if (event.key === 'Enter') {\r\n      dispatch(fetchMovieList(query, String(currentPage), successfulRedirection));\r\n    }\r\n  };\r\n\r\n  const handleDetailButtonClick = (imdbId: string) => {\r\n    const successfulRedirection = () => {\r\n      history.push('/movie-detail/'.concat(imdbId));\r\n    };\r\n\r\n    dispatch(fetchMovieDetail(imdbId, successfulRedirection))\r\n  };\r\n\r\n  const handlePageChange = (pageNumber: number) => {\r\n    if (pageNumber < 1 || pageNumber > totalPage) {\r\n      setIsWarningVisible(true)\r\n    } else {\r\n      // @ts-ignore\r\n      dispatch(fetchMovieList(searchQuery, String(pageNumber), successfulChangePageRedirection(pageNumber)));\r\n      setIsWarningVisible(false);\r\n    }\r\n  };\r\n\r\n  const handlePageNumberInputChange = (event: FormEvent<HTMLInputElement>) => {\r\n    setDesiredPageNumber(parseInt(event.currentTarget.value));\r\n  };\r\n\r\n  const handlePageNumberEnterKeyDown = (event: any) => {\r\n    if (event.key === 'Enter') {\r\n      if (desiredPageNumber < 1 || desiredPageNumber > totalPage) {\r\n        setIsWarningVisible(true)\r\n      } else {\r\n        // @ts-ignore\r\n        dispatch(fetchMovieList(searchQuery, String(desiredPageNumber), successfulChangePageRedirection(desiredPageNumber)));\r\n        setIsWarningVisible(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MovieListPage query={query}\r\n                   searchQuery={searchQuery}\r\n                   currentMovieList={currentMovieList}\r\n                   currentPage={currentPage}\r\n                   totalPage={totalPage}\r\n                   isFetchingMovieList={isFetchingMovieList}\r\n                   desiredPageNumber={desiredPageNumber}\r\n                   isWarningVisible={isWarningVisible}\r\n                   handleSearchInputChange={handleSearchInputChange}\r\n                   handleEnterKeyDown={handleEnterKeyDownProps}\r\n                   handleDetailButtonClick={handleDetailButtonClick}\r\n                   handlePageChange={handlePageChange}\r\n                   handlePageNumberInputChange={handlePageNumberInputChange}\r\n                   handlePageNumberEnterKeyDown={handlePageNumberEnterKeyDown}\r\n    />\r\n  )\r\n};\r\n\r\nexport default connect(mapStateToProps)(MovieListPageContainer);\r\n","import React from 'react';\r\nimport { MovieDetail } from \"../state\";\r\nimport styles from './MovieDetailPage.module.css';\r\nimport SearchBarContainer from \"../Containers/SearchBarContainer\";\r\nimport logoIMDb from '../Assets/logo-20-IMDb.webp';\r\nimport { Loader } from \"semantic-ui-react\";\r\n\r\ninterface MovieDetailPageProps {\r\n  currentMovieDetail: MovieDetail;\r\n  isFetchingMovieDetail: boolean;\r\n  handleButtonBackClick: () => void;\r\n}\r\n\r\nconst MovieDetailPage: React.FC<MovieDetailPageProps> = (props: MovieDetailPageProps) => {\r\n  const renderMovieLabel = (movieType: string) => {\r\n    let customColor: string;\r\n\r\n    switch (movieType) {\r\n      case \"movie\":\r\n        customColor = '#E52D3F';\r\n        break;\r\n      case \"series\":\r\n        customColor = '#F2C32B';\r\n        break;\r\n      default:\r\n        customColor = '#481EE2';\r\n    }\r\n\r\n    let customStyle = {\r\n      backgroundColor: customColor\r\n    };\r\n\r\n    return <span className={styles.MovieType} style={{ ...customStyle }}>{movieType}</span>\r\n  };\r\n\r\n  const renderRatings = () => {\r\n    let ratingsElements: JSX.Element[] = [];\r\n\r\n    for (const rating of props.currentMovieDetail.ratings) {\r\n      ratingsElements.push(\r\n        <div className={styles.Ratings}>\r\n          <span className={styles.Source}>{rating.source}:</span>\r\n          <span> {rating.value}</span>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return ratingsElements;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.MovieDetailContainer}>\r\n      <SearchBarContainer/>\r\n      {\r\n        props.isFetchingMovieDetail ?\r\n          <div className={styles.Loader}>\r\n            <Loader active inline='centered'>Loading</Loader>\r\n          </div> :\r\n          <div className={styles.MovieDetailContentContainerColumn}>\r\n            <div className={styles.MovieDetailContentContainerRow}>\r\n              <img className={styles.Poster} src={props.currentMovieDetail.poster} alt=''/>\r\n              <div className={styles.MovieDetailContent}>\r\n                <div className={styles.TitleLine}>\r\n                  <span className={styles.Title}>{props.currentMovieDetail.title}</span>\r\n                  {\r\n                    renderMovieLabel(props.currentMovieDetail.type)\r\n                  }\r\n                </div>\r\n                <div className={styles.PlotContainer}>\r\n                  <span className={styles.Plot}>{props.currentMovieDetail.plot}</span>\r\n                </div>\r\n                <div className={styles.DetailLine}>\r\n                  <span className={styles.Detail}>Year</span>\r\n                  <span className={styles.DetailContent}>{props.currentMovieDetail.year}</span>\r\n                </div>\r\n                <div className={styles.DetailLine}>\r\n                  <span className={styles.Detail}>Rated</span>\r\n                  <span className={styles.DetailContent}>{props.currentMovieDetail.rated}</span>\r\n                </div>\r\n                <div className={styles.DetailLine}>\r\n                  <span className={styles.Detail}>Released</span>\r\n                  <span className={styles.DetailContent}>{props.currentMovieDetail.released}</span>\r\n                </div>\r\n                <div className={styles.DetailLine}>\r\n                  <span className={styles.Detail}>Run Time</span>\r\n                  <span className={styles.DetailContent}>{props.currentMovieDetail.runtime}</span>\r\n                </div>\r\n                <div className={styles.DetailLine}>\r\n                  <span className={styles.Detail}>Genre</span>\r\n                  <span className={styles.DetailContent}>{props.currentMovieDetail.genre}</span>\r\n                </div>\r\n                <div className={styles.DetailLine}>\r\n                  <span className={styles.Detail}>Director</span>\r\n                  <span className={styles.DetailContent}>{props.currentMovieDetail.director}</span>\r\n                </div>\r\n                <div className={styles.DetailLine}>\r\n                  <span className={styles.Detail}>Writer</span>\r\n                  <span className={styles.DetailContent}>{props.currentMovieDetail.writer}</span>\r\n                </div>\r\n                <div className={styles.DetailLine}>\r\n                  <span className={styles.Detail}>Actors</span>\r\n                  <span className={styles.DetailContent}>{props.currentMovieDetail.actors}</span>\r\n                </div>\r\n                <div className={styles.DetailLine}>\r\n                  <span className={styles.Detail}>Language</span>\r\n                  <span className={styles.DetailContent}>{props.currentMovieDetail.language}</span>\r\n                </div>\r\n                <div className={styles.DetailLine}>\r\n                  <span className={styles.Detail}>Country</span>\r\n                  <span className={styles.DetailContent}>{props.currentMovieDetail.country}</span>\r\n                </div>\r\n                <div className={styles.DetailLine}>\r\n                  <span className={styles.Detail}>Awards</span>\r\n                  <span className={styles.DetailContent}>{props.currentMovieDetail.awards}</span>\r\n                </div>\r\n                <div className={styles.DetailLine}>\r\n                  <span className={styles.Detail}>Ratings</span>\r\n                  <span className={styles.DetailContent}>\r\n                    {\r\n                      renderRatings()\r\n                    }\r\n                  </span>\r\n                </div>\r\n                <div className={styles.DetailLine}>\r\n                  <span className={styles.Detail}>Meta Score</span>\r\n                  <span className={styles.DetailContent}>{props.currentMovieDetail.metascore}</span>\r\n                </div>\r\n                <div className={styles.DetailLine}>\r\n            <span className={styles.Detail}>\r\n              <img className={styles.MiniImage} src={logoIMDb} alt=''/>\r\n              <span> Rating</span>\r\n            </span>\r\n                  <span className={styles.DetailContent}>{props.currentMovieDetail.imdbRating}</span>\r\n                </div>\r\n                <div className={styles.DetailLine}>\r\n            <span className={styles.Detail}>\r\n              <img className={styles.MiniImage} src={logoIMDb} alt=''/>\r\n              <span> Votes</span>\r\n            </span>\r\n                  <span className={styles.DetailContent}>{props.currentMovieDetail.imdbVotes}</span>\r\n                </div>\r\n                <div className={styles.DetailLine}>\r\n                  <span className={styles.Detail}>DVD</span>\r\n                  <span className={styles.DetailContent}>{props.currentMovieDetail.dvd}</span>\r\n                </div>\r\n                <div className={styles.DetailLine}>\r\n                  <span className={styles.Detail}>Box Office</span>\r\n                  <span className={styles.DetailContent}>{props.currentMovieDetail.boxOffice}</span>\r\n                </div>\r\n                <div className={styles.DetailLine}>\r\n                  <span className={styles.Detail}>Production</span>\r\n                  <span className={styles.DetailContent}>{props.currentMovieDetail.production}</span>\r\n                </div>\r\n                <div className={styles.DetailLine}>\r\n                  <span className={styles.Detail}>Website</span>\r\n                  <span className={styles.DetailContent}>{props.currentMovieDetail.website}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <button className={styles.ButtonBack} onClick={props.handleButtonBackClick}>Back</button>\r\n            </div>\r\n          </div>\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default MovieDetailPage;\r\n","import React, { useEffect } from 'react';\r\nimport MovieDetailPage from \"../Components/MovieDetailPage\";\r\nimport { MovieDetail, State } from \"../state\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { RouteComponentProps, useHistory } from \"react-router\";\r\nimport { fetchMovieDetail } from \"../actionsMovie\";\r\n\r\ninterface MovieDetailPageContainerProps extends RouteComponentProps<any> {\r\n  currentMovieDetail: MovieDetail;\r\n  isFetchingMovieDetail: boolean;\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    currentMovieDetail: state.control.currentMovieDetail,\r\n    isFetchingMovieDetail: state.session.isFetchingMovieDetail\r\n  }\r\n};\r\n\r\nconst MovieDetailPageContainer: React.FC<MovieDetailPageContainerProps> = (props: MovieDetailPageContainerProps) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const currentMovieDetail = props.currentMovieDetail;\r\n  const isFetchingMovieDetail = props.isFetchingMovieDetail;\r\n\r\n  const urlParams = props.match.params;\r\n  const imdbId = urlParams.imdbId;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMovieDetail(imdbId));\r\n  }, [dispatch, imdbId]);\r\n\r\n  const handleButtonBackClick = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <MovieDetailPage currentMovieDetail={currentMovieDetail}\r\n                     isFetchingMovieDetail={isFetchingMovieDetail}\r\n                     handleButtonBackClick={handleButtonBackClick}\r\n    />\r\n  )\r\n};\r\n\r\nexport default connect(mapStateToProps)(MovieDetailPageContainer);\r\n","import React from \"react\";\r\nimport { Button, Header, Modal } from \"semantic-ui-react\";\r\nimport { State } from \"../state\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { updateErrorModalStatus } from \"../actions\";\r\nimport styles from  \"./ErrorModalContainer.module.css\";\r\n\r\ninterface ErrorModalProps {\r\n  dispatch: Dispatch;\r\n  isOpen: boolean;\r\n  title?: string;\r\n  content?: string | JSX.Element;\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n  return {\r\n    isOpen: state.control.errorModal.isOpen,\r\n    title: state.control.errorModal.title,\r\n    content: state.control.errorModal.content\r\n  };\r\n};\r\n\r\nconst ErrorModalContainer: React.FC<ErrorModalProps> = (props: ErrorModalProps) => {\r\n  const handleCloseErrorModal = () => {\r\n    props.dispatch(updateErrorModalStatus({\r\n      title: \"\",\r\n      content: \"\",\r\n      isOpen: false\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={props.isOpen}\r\n      onClose={handleCloseErrorModal}\r\n      size='small'\r\n      className={styles.ErrorModal}\r\n    >\r\n      <Header icon='close' content={props.title ? props.title : \"Error\"} className={styles.Header}/>\r\n      <Modal.Content>\r\n        {props.content ? props.content : \"There is an error in the current operation. Please refresh your browser and try again.\"}\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button negative onClick={handleCloseErrorModal}>\r\n          Close\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(ErrorModalContainer);\r\n","import React from 'react';\nimport './App.css';\nimport HomePageContainer from \"../Containers/HomePageContainer\";\nimport { Route, Switch } from \"react-router\";\nimport MovieListPageContainer from \"../Containers/MoveListPageContainer\";\nimport MovieDetailPageContainer from \"../Containers/MovieDetailPageContainer\";\nimport ErrorModalContainer from \"../Containers/ErrorModalContainer\";\n\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\" component={HomePageContainer}/>\n        <Route exact path=\"/movie-list/:searchQuery/:pageNumber\" component={MovieListPageContainer}/>\n        <Route exact path=\"/movie-detail/:imdbId\" component={MovieDetailPageContainer}/>\n      </Switch>\n      <ErrorModalContainer/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CommunicationState, ControlState, SessionState } from \"./state\";\r\n\r\nexport const initialCommunicationState: CommunicationState = {\r\n  httpCalls: []\r\n};\r\n\r\nexport const initialControlState: ControlState = {\r\n  errorModal: {\r\n    isOpen: false\r\n  },\r\n  currentTotalResults: 0,\r\n  currentMovieList: [],\r\n  currentMovieDetail: {\r\n    title: \"\",\r\n    year: \"\",\r\n    rated: \"\",\r\n    released:\"\",\r\n    runtime: \"\",\r\n    genre: \"\",\r\n    director: \"\",\r\n    writer: \"\",\r\n    actors: \"\",\r\n    plot: \"\",\r\n    language: \"\",\r\n    country: \"\",\r\n    awards: \"\",\r\n    poster: \"\",\r\n    ratings: [],\r\n    metascore: \"\",\r\n    imdbRating: \"\",\r\n    imdbVotes: \"\",\r\n    imdbId: \"\",\r\n    type: \"\",\r\n    dvd: \"\",\r\n    boxOffice: \"\",\r\n    production: \"\",\r\n    website: \"\",\r\n  }\r\n};\r\n\r\nexport const initialSessionState: SessionState = {\r\n  isFetchingMovieList: false,\r\n  isFetchingMovieDetail: false,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { CommunicationState, ControlState, SessionState, State } from \"./state\";\r\nimport * as actionsHttp from \"./actionsHttp\";\r\nimport { initialCommunicationState, initialControlState, initialSessionState } from \"./initialStates\";\r\nimport * as actionsMovie from \"./actionsMovie\";\r\nimport * as actions from \"./actions\";\r\n\r\nexport const controlReducer = (state: ControlState = initialControlState, action: any) => {\r\n  switch (action.type) {\r\n    case actions.UPDATE_ERROR_MODAL:\r\n      return Object.assign({}, state, {\r\n        errorModal: action.payload\r\n      });\r\n    case actionsMovie.UPDATE_CURRENT_TOTAL_RESULTS:\r\n      return Object.assign({}, state, {\r\n        currentTotalResults: action.payload\r\n      });\r\n    case actionsMovie.UPDATE_CURRENT_MOVIE_LIST:\r\n      return Object.assign({}, state, {\r\n        currentMovieList: action.payload\r\n      });\r\n    case actionsMovie.UPDATE_CURRENT_MOVIE_DETAIL:\r\n      return Object.assign({}, state, {\r\n        currentMovieDetail: action.payload\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const sessionReducer = (state: SessionState = initialSessionState, action: any) => {\r\n  switch (action.type) {\r\n    case actionsMovie.UPDATE_FETCHING_MOVIE_LIST_STATUS:\r\n      return Object.assign({}, state, {\r\n        isFetchingMovieList: action.payload\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const communicationReducer = (state: CommunicationState = initialCommunicationState, action: any) => {\r\n  switch (action.type) {\r\n    case actionsHttp.ADD_NEW_HTTP_CALL: {\r\n      return Object.assign({}, state, {\r\n        httpCalls: [\r\n          ...state.httpCalls,\r\n          action.payload\r\n        ]\r\n      });\r\n    }\r\n    case actionsHttp.UPDATE_HTTP_CALL_STATUS: {\r\n      const httpCallIndex = state.httpCalls.findIndex((x) => x.id === action.payload.callId);\r\n      const newHttpCall = Object.assign({}, state.httpCalls[httpCallIndex], {\r\n        status: action.payload.status\r\n      });\r\n      if (httpCallIndex >= 0) {\r\n        return Object.assign({}, state, {\r\n          httpCalls: [\r\n            ...state.httpCalls.slice(0, httpCallIndex),\r\n            newHttpCall,\r\n            ...state.httpCalls.slice(httpCallIndex + 1)\r\n          ]\r\n        });\r\n      } else {\r\n        return state;\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const reducers = combineReducers<State>({\r\n  control: controlReducer,\r\n  session: sessionReducer,\r\n  communication: communicationReducer\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\n\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { reducers } from \"./reducers\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst logger = createLogger({\n  level: \"info\",\n  collapsed: true,\n  diff: true\n});\n\nconst composeEnhancers = composeWithDevTools({\n  // Specify name here, actionsBlacklist, actionsCreators and other options if needed\n});\n\nconst middleware = composeEnhancers(applyMiddleware(\n  thunkMiddleware,\n  logger\n));\n\nconst store = createStore(reducers, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename=\"/filmku\">\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}